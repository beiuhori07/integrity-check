name: Spring Boot CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin' # Temurin is the Eclipse Foundation's OpenJDK distribution

    - name: Print JAVA_HOME
      run: echo "JAVA_HOME=${JAVA_HOME}"

    - name: Print a message
      run: echo "Hello, GitHub Actions!"
      
    - name: Grant execute permission for gradlew
      run: |
        echo "Before chmod on wrapper"
        chmod +x ./gradlew
        echo "After chmod on wrapper"
        
    - name: Download dependencies
      run: |
        echo "Dowloading the dependencies...."
        ./gradlew --no-daemon --quiet dependencies
        echo "Dependencies downloaded."

    - name: Install npm dependencies
      run: |
        echo 'npm deps.......'
        npm install
        echo 'npm deps done..........'

    - name: Make HTTP GET request with curl - to esm, for dependency check
      run: |
          # Define the base URL and query parameters
          BASE_URL=" https://5045-86-127-179-145.ngrok-free.app/blockchain/dependency-check"
          PARAMS=""

          # Make the GET request
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" "${BASE_URL}${PARAMS}")

          # Check if the response is a 4xx or 5xx status code
          if [[ ${RESPONSE} -ge 400 ]]; then
            echo "HTTP error occurred: ${RESPONSE}"
            cat response.json
            exit 1  # Exit with a non-zero status to fail the CI/CD pipeline
          fi

          echo "Success: ${RESPONSE}"

    - name: Build with Gradle
      run: |
        echo "Starting the build process...."
        ./gradlew build
        echo "Build process completed."

    # Optional: Run tests (if they are not already included in the build task)
    - name: Test with Gradle
      run: |
        echo "Starting the testing process"
        ./gradlew test
        echo "Testing process done."
